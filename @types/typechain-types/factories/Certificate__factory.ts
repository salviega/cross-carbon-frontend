/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Certificate, CertificateInterface } from "../Certificate";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620004db576200123a803803806200001d81620004e0565b9283398101606082820312620004db5781516001600160401b039190828111620004db57816200004f91850162000506565b9060209384810151848111620004db57826200006d91830162000506565b916040820151858111620004db5762000087920162000506565b825191848311620004c5576000908154936001958686811c96168015620004ba575b89871014620003c4578190601f9687811162000467575b50899087831160011462000403578592620003f7575b5050600019600383901b1c191690861b1782555b805190868211620003e35785548681811c91168015620003d8575b89821014620003c45790818684931162000371575b5088908683116001146200030d57849262000301575b5050600019600383901b1c191690851b1784555b3315620002e95760068054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a38151948511620002d5576008548481811c91168015620002ca575b87821014620002b6578381116200026d575b508592851160011462000204579394508492919083620001f8575b50501b916000199060031b1c1916176008555b604051610cc19081620005798239f35b015192503880620001d5565b6008815285812093958591601f198316915b8883831062000252575050501062000238575b505050811b01600855620001e8565b015160001960f88460031b161c1916905538808062000229565b85870151885590960195948501948793509081019062000216565b600882528682208480880160051c820192898910620002ac575b0160051c019085905b828110620002a0575050620001ba565b83815501859062000290565b9250819262000287565b634e487b7160e01b82526022600452602482fd5b90607f1690620001a8565b634e487b7160e01b81526041600452602490fd5b60249060405190631e4fbdf760e01b82526004820152fd5b01519050388062000130565b8785528985208894509190601f198416865b8c8282106200035a575050841162000340575b505050811b01845562000144565b015160001960f88460031b161c1916905538808062000332565b8385015186558b979095019493840193016200031f565b9091508684528884208680850160051c8201928b8610620003ba575b918991869594930160051c01915b828110620003ab5750506200011a565b8681558594508991016200039b565b925081926200038d565b634e487b7160e01b84526022600452602484fd5b90607f169062000105565b634e487b7160e01b83526041600452602483fd5b015190503880620000d6565b8580528a86208994509190601f198416875b8d82821062000450575050841162000436575b505050811b018255620000ea565b015160001960f88460031b161c1916905538808062000428565b8385015186558c9790950194938401930162000415565b9091508480528985208780850160051c8201928c8610620004b0575b918a91869594930160051c01915b828110620004a1575050620000c0565b8781558594508a910162000491565b9250819262000483565b95607f1695620000a9565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620004c557604052565b919080601f84011215620004db5782516001600160401b038111620004c5576020906200053c601f8201601f19168301620004e0565b92818452828287010111620004db5760005b8181106200056457508260009394955001015290565b85810183015184820184015282016200054e56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610aa25750806306fdde03146109d7578063081812fc1461099c578063095ea7b31461094657806323b872dd146108f057806342842e0e1461088e5780636352211e1461085d57806370a0823114610808578063715018a6146107ab5780638da5cb5b1461078257806395d89b41146106b657806398bdf6f514610697578063a144819414610426578063a22cb465146103ba578063b88d4fde146102f4578063c87b56dd146101cd578063e985e9c51461017b5763f2fde38b146100e957600080fd5b3461017757602036600319011261017757610102610b4e565b9061010b610c24565b6001600160a01b03918216928315610161575050600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101c957806003193601126101c95760ff8160209361019b610b4e565b6101a3610b69565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b509190346101c95760209081600319360112610177576101ed8435610c50565b50805192806008549060019082821c9282811680156102ea575b87851081146102d7578899509688969785829a5291826000146102b0575050600114610254575b5050506102509291610241910385610be6565b51928284938452830190610b0e565b0390f35b9190869350600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b828410610298575050508201018161024161025061022e565b8054848a01860152889550879490930192810161027f565b60ff19168782015293151560051b860190930193508492506102419150610250905061022e565b634e487b7160e01b835260228a52602483fd5b93607f1693610207565b5090346101775760803660031901126101775761030f610b4e565b50610318610b69565b5060643567ffffffffffffffff81116103b657366023820112156103b657808301359061034482610c08565b9061035184519283610be6565b82825236602484830101116103b2578260649692602095946024879401848301370101525162461bcd60e51b815291820152601e60248201527f736166655472616e7366657246726f6d2069736e277420616c6c6f77656400006044820152fd5b8580fd5b8380fd5b5082346104235782600319360112610423576103d4610b4e565b506024358015150361042357506020606492519162461bcd60e51b8352820152601f60248201527f736574417070726f76616c466f72416c6c2069736e277420616c6c6f776564006044820152fd5b80fd5b509190346101c957806003193601126101c957610441610b4e565b9261044a610c24565b60075492600019908185146106845760018501600755835161046b81610bb4565b8181526001600160a01b039680881693841561066d5787845260209860028a528785205416908115159081610642575b5085855260038a528785206001815401905588855260028a52878520866bffffffffffffffffffffffff60a01b82541617905588868951937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8880a461062d57503b61050c575b5050505051908152f35b84939591929451878180610547630a85bd0160e11b95868352338c840152886024840152876044840152608060648401526084830190610b0e565b0381878a5af18491816105e9575b506105b3575050503d6000146105ab573d61056f81610c08565b9061057c84519283610be6565b81528091863d92013e5b805194856105a557505051633250574960e11b81529182015260249150fd5b85925001fd5b506060610586565b9195939492506001600160e01b0319909116036105d557505038808080610502565b6024925191633250574960e11b8352820152fd5b9091508881813d8311610626575b6106018183610be6565b8101031261062257516001600160e01b031981168103610622579038610555565b8480fd5b503d6105f7565b6339e3563760e11b8152858101849052602490fd5b878b5288862080546001600160a01b031916905582865260038b52888620805490910190553861049b565b8651633250574960e11b8152808701859052602490fd5b634e487b7160e01b815260118352602490fd5b5050346101c957816003193601126101c9576020906007549051908152f35b5091346104235780600319360112610423578151918160019283549384811c91818616958615610778575b60209687851081146102d7578899509688969785829a5291826000146102b057505060011461071d575050506102509291610241910385610be6565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610760575050508201018161024161025061022e565b8054848a018601528895508794909301928101610747565b92607f16926106e1565b5050346101c957816003193601126101c95760065490516001600160a01b039091168152602090f35b83346104235780600319360112610423576107c4610c24565b600680546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b509134610423576020366003190112610423576001600160a01b0361082b610b4e565b169283156108485750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b509134610423576020366003190112610423575061087d60209235610c50565b90516001600160a01b039091168152f35b509034610177576020906064936108a436610b7f565b50505081516108b281610bb4565b525162461bcd60e51b815291820152601e60248201527f736166655472616e7366657246726f6d2069736e277420616c6c6f77656400006044820152fd5b5082346104235750602060649261090636610b7f565b505050519162461bcd60e51b8352820152601a60248201527f7472616e7366657246726f6d2069736e277420616c6c6f7765640000000000006044820152fd5b508234610423578260031936011261042357506020606492610966610b4e565b505162461bcd60e51b8152918201526015602482015274105c1c1c9bdd99481a5cdb89dd08185b1b1bddd959605a1b6044820152fd5b5034610177576020366003190112610177579182602093356109bd81610c50565b50825283528190205490516001600160a01b039091168152f35b50913461042357806003193601126104235781519181825492600184811c91818616958615610a98575b60209687851081146102d7578899509688969785829a5291826000146102b0575050600114610a3d575050506102509291610241910385610be6565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610a80575050508201018161024161025061022e565b8054848a018601528895508794909301928101610a67565b92607f1692610a01565b92505034610177576020366003190112610177573563ffffffff60e01b811680910361017757602092506380ac58cd60e01b8114908115610afd575b8115610aec575b5015158152f35b6301ffc9a760e01b14905038610ae5565b635b5e139f60e01b81149150610ade565b919082519283825260005b848110610b3a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b19565b600435906001600160a01b0382168203610b6457565b600080fd5b602435906001600160a01b0382168203610b6457565b6060906003190112610b64576001600160a01b03906004358281168103610b6457916024359081168103610b64579060443590565b6020810190811067ffffffffffffffff821117610bd057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610bd057604052565b67ffffffffffffffff8111610bd057601f01601f191660200190565b6006546001600160a01b03163303610c3857565b60405163118cdaa760e01b8152336004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115610c73575090565b60249060405190637e27328960e01b82526004820152fdfea264697066735822122097b002b78cc008f076a8867d40f154a3d05425e51d9ce7dcbdceda725d737f0264736f6c63430008140033";

type CertificateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Certificate__factory extends ContractFactory {
  constructor(...args: CertificateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Certificate";
  }

  deploy(
    _name: string,
    _symbol: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Certificate> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    ) as Promise<Certificate>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    );
  }
  attach(address: string): Certificate {
    return super.attach(address) as Certificate;
  }
  connect(signer: Signer): Certificate__factory {
    return super.connect(signer) as Certificate__factory;
  }
  static readonly contractName: "Certificate";
  public readonly contractName: "Certificate";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateInterface {
    return new utils.Interface(_abi) as CertificateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Certificate {
    return new Contract(address, _abi, signerOrProvider) as Certificate;
  }
}
