/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Communicator, CommunicatorInterface } from "../Communicator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "someText",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161074e38038061074e83398101604081905261002f9161016d565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610101565b50600180546001600160a01b03199081166001600160a01b038581169182179093556002805490921692841692831790915560405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af11580156100d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f991906101a0565b5050506101c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461016857600080fd5b919050565b6000806040838503121561018057600080fd5b61018983610151565b915061019760208401610151565b90509250929050565b6000602082840312156101b257600080fd5b815180151581146101c257600080fd5b9392505050565b610576806101d86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063570b31f014610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b61006461005f366004610300565b6100a0565b005b6100646101e2565b600054604080516001600160a01b039092168252519081900360200190f35b61006461009b3660046103d2565b6101f6565b6040805160a081019091526001600160a01b03841660c08201526000908060e081016040516020818303038152906040528152602001846040516020016100e7919061043a565b60408051601f198184030181529190528152602001600060405190808252806020026020018201604052801561014357816020015b604080518082019091526000808252602082015281526020019060019003908161011c5790505b5081526002546001600160a01b03908116602080840191909152604080519182018152600082529283015260015491516396f4e9f960e01b815292935016906396f4e9f990610198908590859060040161044d565b6020604051808303816000875af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610527565b5050505050565b6101ea610239565b6101f46000610266565b565b6101fe610239565b6001600160a01b03811661022d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61023681610266565b50565b6000546001600160a01b031633146101f45760405163118cdaa760e01b8152336004820152602401610224565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102cd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b803567ffffffffffffffff811681146102cd57600080fd5b60008060006060848603121561031557600080fd5b61031e846102b6565b9250602084013567ffffffffffffffff8082111561033b57600080fd5b818601915086601f83011261034f57600080fd5b813581811115610361576103616102d2565b604051601f8201601f19908116603f01168101908382118183101715610389576103896102d2565b816040528281528960208487010111156103a257600080fd5b8260208601602083013760006020848301015280965050505050506103c9604085016102e8565b90509250925092565b6000602082840312156103e457600080fd5b6103ed826102b6565b9392505050565b6000815180845260005b8181101561041a576020818501810151868301820152016103fe565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103ed60208301846103f4565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261047a60e08601826103f4565b905081860151603f198087840301606088015261049783836103f4565b88860151888203830160808a01528051808352908601945060009350908501905b808410156104ea57845180516001600160a01b03168352860151868301529385019360019390930192908601906104b8565b5060608901516001600160a01b031660a08901526080890151888203830160c08a0152955061051981876103f4565b9a9950505050505050505050565b60006020828403121561053957600080fd5b505191905056fea2646970667358221220244ee0cd30b7d67f464e529c28037e348a67cf483780eafe7a8cf35122f6993d64736f6c63430008140033";

type CommunicatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommunicatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Communicator__factory extends ContractFactory {
  constructor(...args: CommunicatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Communicator";
  }

  deploy(
    _router: string,
    _link: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Communicator> {
    return super.deploy(
      _router,
      _link,
      overrides || {}
    ) as Promise<Communicator>;
  }
  getDeployTransaction(
    _router: string,
    _link: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _link, overrides || {});
  }
  attach(address: string): Communicator {
    return super.attach(address) as Communicator;
  }
  connect(signer: Signer): Communicator__factory {
    return super.connect(signer) as Communicator__factory;
  }
  static readonly contractName: "Communicator";
  public readonly contractName: "Communicator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommunicatorInterface {
    return new utils.Interface(_abi) as CommunicatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Communicator {
    return new Contract(address, _abi, signerOrProvider) as Communicator;
  }
}
