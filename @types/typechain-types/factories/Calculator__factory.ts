/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Calculator, CalculatorInterface } from "../Calculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouterCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "UnexpectedRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "s_lastFlag",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "s_lastArgs",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "s_lastReturns",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "s_lastBuyer",
        type: "address",
      },
    ],
    name: "CarbonFootprintCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_lastArgs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastBuyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastFlag",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_lastReturns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "string",
        name: "flag",
        type: "string",
      },
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "encryptedSecretsUrls",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "donHostedSecretsSlotID",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "donHostedSecretsVersion",
        type: "uint64",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "bytesArgs",
        type: "bytes[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "jobId",
        type: "bytes32",
      },
    ],
    name: "sendRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "request",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "jobId",
        type: "bytes32",
      },
    ],
    name: "sendRequestCBOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200229a3803806200229a833981016040819052620000349162000180565b6001600160a01b0381166080523380600081620000985760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000cb57620000cb81620000d5565b50505050620001b2565b336001600160a01b038216036200012f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200008f565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000602082840312156200019357600080fd5b81516001600160a01b0381168114620001ab57600080fd5b9392505050565b6080516120c5620001d5600039600081816101dc0152610ab601526120c56000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063bfc2e4fc11610066578063bfc2e4fc14610185578063f2fde38b14610198578063f3fa880e146101ab578063f9befbfd146101be57600080fd5b80638da5cb5b1461014a5780639681096f1461015b578063b1e217491461017c57600080fd5b80630ca76175146100d45780633944ea3a146100e95780634b0795a8146101075780634f5aae921461010f57806371e4dda61461011757806379ba509714610142575b600080fd5b6100e76100e2366004611779565b6101d1565b005b6100f1610255565b6040516100fe9190611835565b60405180910390f35b6100f16102e3565b6100f16102f0565b60055461012a906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b6100e76102fd565b6000546001600160a01b031661012a565b61016e610169366004611878565b6103ac565b6040519081526020016100fe565b61016e60025481565b61016e610193366004611a36565b6103d0565b6100e76101a6366004611b6d565b6104d5565b61016e6101b9366004611b88565b6104e9565b6100f16101cc366004611b88565b61050a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021a5760405163c6829f8360e01b815260040160405180910390fd5b610225838383610535565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b6003805461026290611ba1565b80601f016020809104026020016040519081016040528092919081815260200182805461028e90611ba1565b80156102db5780601f106102b0576101008083540402835291602001916102db565b820191906000526020600020905b8154815290600101906020018083116102be57829003601f168201915b505050505081565b6004805461026290611ba1565b6006805461026290611ba1565b6001546001600160a01b031633146103555760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60006103b6610a5c565b6103c285858585610ab1565b600281905595945050505050565b60006104136040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b61041d818c610b83565b8951156104335761042e818b610b94565b61044d565b6001600160401b0388161561044d5761044d818a8a610bc5565b86511561045e5761045e8188610c5b565b85511561046f5761046f8187610c85565b600580546001600160a01b0319166001600160a01b038f1617905560066104968d82611c29565b5086516104aa9060079060208a0190611586565b506104bf6104b782610caf565b868686610ab1565b60028190559d9c50505050505050505050505050565b6104dd610a5c565b6104e681610f87565b50565b600881815481106104f957600080fd5b600091825260209091200154905081565b6007818154811061051a57600080fd5b90600052602060002001600091509050805461026290611ba1565b826002541461055a5760405163d068bf5b60e01b81526004810184905260240161034c565b6000825111801561061857506106186006805461057690611ba1565b80601f01602080910402602001604051908101604052809291908181526020018280546105a290611ba1565b80156105ef5780601f106105c4576101008083540402835291602001916105ef565b820191906000526020600020905b8154815290600101906020018083116105d257829003601f168201915b5050505050604051806040016040528060068152602001651d1c985d995b60d21b815250611030565b15610795576000828060200190518101906106339190611ce8565b9050670de0b6b3a7640000600061064a8280611d17565b6106549084611d44565b90506106608280611d17565b61066a9084611d58565b925060006106788385611d44565b90506106848385611d58565b6040805160038082526080820190925291955085919060208201606080368337505081516106b99260089250602001906115dc565b508260086000815481106106cf576106cf611d6c565b90600052602060002001819055508160086001815481106106f2576106f2611d6c565b906000526020600020018190555080600860028154811061071557610715611d6c565b600091825260209091200155600361072d8882611c29565b50600461073a8782611c29565b5060055460405189917fb46213618301da6493e4eb9418f3bbb39dd63885882b661a3113d2f042413b3c91610783916006916007916008916001600160a01b0390911690611dff565b60405180910390a25050505050610a1b565b600082511180156108545750610854600680546107b190611ba1565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90611ba1565b801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b50505050506040518060400160405280600781526020016667726f6365727960c81b815250611030565b15610a1b5760008280602001905181019061086f9190611ce8565b9050670de0b6b3a76400006000816108878180611d17565b6108919190611d17565b61089b9084611d44565b9050816108a88180611d17565b6108b29190611d17565b6108bc9084611d58565b925060006108ca8380611d17565b6108d49085611d44565b90506108e08380611d17565b6108ea9085611d58565b935060006108f88486611d44565b90506109048486611d58565b60408051600480825260a0820190925291965086919060208201608080368337505081516109399260089250602001906115dc565b5083600860008154811061094f5761094f611d6c565b906000526020600020018190555082600860018154811061097257610972611d6c565b906000526020600020018190555081600860028154811061099557610995611d6c565b90600052602060002001819055508060086003815481106109b8576109b8611d6c565b6000918252602090912001556005546040518a917fb46213618301da6493e4eb9418f3bbb39dd63885882b661a3113d2f042413b3c91610a0c916006916007916008916001600160a01b0390911690611dff565b60405180910390a25050505050505b827f7873807bf6ddc50401cd3d29bbe0decee23fd4d68d273f4b5eb83cded4d2f17260036004604051610a4f929190611ec0565b60405180910390a2505050565b6000546001600160a01b03163314610aaf5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015260640161034c565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b8152600401610b09959493929190611ee5565b6020604051808303816000875af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c9190611ce8565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b610b90826000808461108a565b5050565b8051600003610bb65760405163e889636f60e01b815260040160405180910390fd5b60016020830152608090910152565b6000610bd2610100611108565b9050610c05604051806040016040528060068152602001651cdb1bdd125160d21b8152508261112990919063ffffffff16565b610c128160ff8516611147565b6040805180820190915260078152663b32b939b4b7b760c91b6020820152610c3b908290611129565b610c458183611147565b6002602085015251516080909301929092525050565b8051600003610c7d5760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b8051600003610ca75760405163fe936cb760e01b815260040160405180910390fd5b60c090910152565b60606000610cbe610100611108565b9050610cf76040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b8152508261112990919063ffffffff16565b8251610d15906002811115610d0e57610d0e611f2e565b8290611153565b6040805180820190915260088152676c616e677561676560c01b6020820152610d3f908290611129565b6040830151610d56908015610d0e57610d0e611f2e565b604080518082019091526006815265736f7572636560d01b6020820152610d7e908290611129565b6060830151610d8e908290611129565b60a08301515115610e22576040805180820190915260048152636172677360e01b6020820152610dbf908290611129565b610dc88161118c565b60005b8360a0015151811015610e1857610e088460a001518281518110610df157610df1611d6c565b60200260200101518361112990919063ffffffff16565b610e1181611f44565b9050610dcb565b50610e22816111b0565b60808301515115610ee657600083602001516002811115610e4557610e45611f2e565b03610e635760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152610e94908290611129565b610ead83602001516002811115610d0e57610d0e611f2e565b6040805180820190915260078152667365637265747360c81b6020820152610ed6908290611129565b6080830151610ee69082906111ce565b60c08301515115610f7f5760408051808201909152600981526862797465734172677360b81b6020820152610f1c908290611129565b610f258161118c565b60005b8360c0015151811015610f7557610f658460c001518281518110610f4e57610f4e611d6c565b6020026020010151836111ce90919063ffffffff16565b610f6e81611f44565b9050610f28565b50610f7f816111b0565b515192915050565b336001600160a01b03821603610fdf5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161034c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000816040516020016110439190611f5d565b604051602081830303815290604052805190602001208360405160200161106a9190611f5d565b604051602081830303815290604052805190602001201490505b92915050565b80516000036110ac576040516322ce3edd60e01b815260040160405180910390fd5b838360028111156110bf576110bf611f2e565b908160028111156110d2576110d2611f2e565b905250604084018280156110e8576110e8611f2e565b908180156110f8576110f8611f2e565b9052506060909301929092525050565b611110611623565b805161111c90836111db565b5060006020820152919050565b6111368260038351611252565b81516111429082611371565b505050565b610b9082600083611252565b81516111609060c2611399565b50610b90828260405160200161117891815260200190565b6040516020818303038152906040526111ce565b611197816004611402565b6001816020018181516111aa9190611f79565b90525050565b6111bb816007611402565b6001816020018181516111aa9190611f8c565b6111368260028351611252565b6040805180820190915260608152600060208201526111fb602083611d58565b156112235761120b602083611d58565b611216906020611f8c565b6112209083611f79565b91505b60208084018390526040518085526000815290818401018181101561124757600080fd5b604052509192915050565b6017816001600160401b03161161127e5782516112789060e0600585901b168317611399565b50505050565b60ff816001600160401b0316116112be5782516112a6906018611fe0600586901b1617611399565b508251611278906001600160401b0383166001611419565b61ffff816001600160401b0316116112ff5782516112e7906019611fe0600586901b1617611399565b508251611278906001600160401b0383166002611419565b63ffffffff816001600160401b03161161134257825161132a90601a611fe0600586901b1617611399565b508251611278906001600160401b0383166004611419565b825161135990601b611fe0600586901b1617611399565b508251611278906001600160401b0383166008611419565b6040805180820190915260608152600060208201526113928383845161149e565b9392505050565b60408051808201909152606081526000602082015282515160006113be826001611f79565b9050846020015182106113df576113df856113da836002611d17565b61156f565b84516020838201018581535080518211156113f8578181525b5093949350505050565b815161114290601f611fe0600585901b1617611399565b604080518082019091526060815260006020820152835151600061143d8285611f79565b9050856020015181111561145a5761145a866113da836002611d17565b6000600161146a86610100612083565b6114749190611f8c565b90508651828101878319825116178152508051831115611492578281525b50959695505050505050565b60408051808201909152606081526000602082015282518211156114c157600080fd5b83515160006114d08483611f79565b905085602001518111156114ed576114ed866113da836002611d17565b855180518382016020019160009180851115611507578482525b505050602086015b602086106115475780518252611526602083611f79565b9150611533602082611f79565b9050611540602087611f8c565b955061150f565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b815161157b83836111db565b506112788382611371565b8280548282559060005260206000209081019282156115cc579160200282015b828111156115cc57825182906115bc9082611c29565b50916020019190600101906115a6565b506115d8929150611658565b5090565b828054828255906000526020600020908101928215611617579160200282015b828111156116175782518255916020019190600101906115fc565b506115d8929150611675565b604051806040016040528061164b604051806040016040528060608152602001600081525090565b8152602001600081525090565b808211156115d857600061166c828261168a565b50600101611658565b5b808211156115d85760008155600101611676565b50805461169690611ba1565b6000825580601f106116a6575050565b601f0160209004906000526020600020908101906104e69190611675565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611702576117026116c4565b604052919050565b600082601f83011261171b57600080fd5b81356001600160401b03811115611734576117346116c4565b611747601f8201601f19166020016116da565b81815284602083860101111561175c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561178e57600080fd5b8335925060208401356001600160401b03808211156117ac57600080fd5b6117b88783880161170a565b935060408601359150808211156117ce57600080fd5b506117db8682870161170a565b9150509250925092565b60005b838110156118005781810151838201526020016117e8565b50506000910152565b600081518084526118218160208601602086016117e5565b601f01601f19169290920160200192915050565b6020815260006113926020830184611809565b80356001600160401b038116811461185f57600080fd5b919050565b803563ffffffff8116811461185f57600080fd5b6000806000806080858703121561188e57600080fd5b84356001600160401b038111156118a457600080fd5b6118b08782880161170a565b9450506118bf60208601611848565b92506118cd60408601611864565b9396929550929360600135925050565b80356001600160a01b038116811461185f57600080fd5b803560ff8116811461185f57600080fd5b60006001600160401b0382111561191e5761191e6116c4565b5060051b60200190565b600082601f83011261193957600080fd5b8135602061194e61194983611905565b6116da565b82815260059290921b8401810191818101908684111561196d57600080fd5b8286015b848110156119ac5780356001600160401b038111156119905760008081fd5b61199e8986838b010161170a565b845250918301918301611971565b509695505050505050565b600082601f8301126119c857600080fd5b813560206119d861194983611905565b82815260059290921b840181019181810190868411156119f757600080fd5b8286015b848110156119ac5780356001600160401b03811115611a1a5760008081fd5b611a288986838b010161170a565b8452509183019183016119fb565b60008060008060008060008060008060006101608c8e031215611a5857600080fd5b611a618c6118dd565b9a506001600160401b038060208e01351115611a7c57600080fd5b611a8c8e60208f01358f0161170a565b9a508060408e01351115611a9f57600080fd5b611aaf8e60408f01358f0161170a565b99508060608e01351115611ac257600080fd5b611ad28e60608f01358f0161170a565b9850611ae060808e016118f4565b9750611aee60a08e01611848565b96508060c08e01351115611b0157600080fd5b611b118e60c08f01358f01611928565b95508060e08e01351115611b2457600080fd5b50611b358d60e08e01358e016119b7565b9350611b446101008d01611848565b9250611b536101208d01611864565b91506101408c013590509295989b509295989b9093969950565b600060208284031215611b7f57600080fd5b611392826118dd565b600060208284031215611b9a57600080fd5b5035919050565b600181811c90821680611bb557607f821691505b602082108103611bd557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561114257600081815260208120601f850160051c81016020861015611c025750805b601f850160051c820191505b81811015611c2157828155600101611c0e565b505050505050565b81516001600160401b03811115611c4257611c426116c4565b611c5681611c508454611ba1565b84611bdb565b602080601f831160018114611c8b5760008415611c735750858301515b600019600386901b1c1916600185901b178555611c21565b600085815260208120601f198616915b82811015611cba57888601518255948401946001909101908401611c9b565b5085821015611cd85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611cfa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761108457611084611d01565b634e487b7160e01b600052601260045260246000fd5b600082611d5357611d53611d2e565b500490565b600082611d6757611d67611d2e565b500690565b634e487b7160e01b600052603260045260246000fd5b60008154611d8f81611ba1565b808552602060018381168015611dac5760018114611dc657611df4565b60ff1985168884015283151560051b880183019550611df4565b866000528260002060005b85811015611dec5781548a8201860152908301908401611dd1565b890184019650505b505050505092915050565b608081526000611e126080830187611d82565b6020838203818501528187548084528284019150828160051b85010160008a8152848120815b84811015611e6557878403601f19018652611e538483611d82565b95870195935060019182019101611e38565b5050878203604089015289548083528a8252858220928601965093509091505b82811015611ea157815485529383019360019182019101611e85565b5050506001600160a01b03851660608501525090505b95945050505050565b604081526000611ed36040830185611d82565b8281036020840152611eb78185611d82565b6001600160401b038616815260a060208201526000611f0760a0830187611809565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b634e487b7160e01b600052602160045260246000fd5b600060018201611f5657611f56611d01565b5060010190565b60008251611f6f8184602087016117e5565b9190910192915050565b8082018082111561108457611084611d01565b8181038181111561108457611084611d01565b600181815b80851115611fda578160001904821115611fc057611fc0611d01565b80851615611fcd57918102915b93841c9390800290611fa4565b509250929050565b600082611ff157506001611084565b81611ffe57506000611084565b8160018114612014576002811461201e5761203a565b6001915050611084565b60ff84111561202f5761202f611d01565b50506001821b611084565b5060208310610133831016604e8410600b841016171561205d575081810a611084565b6120678383611f9f565b806000190482111561207b5761207b611d01565b029392505050565b60006113928383611fe256fea264697066735822122077b7858f7a43bbeb0e5b5e8862bafc76c47991ebc528c16cae27dc348864b2b564736f6c63430008140033";

type CalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Calculator__factory extends ContractFactory {
  constructor(...args: CalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Calculator";
  }

  deploy(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Calculator> {
    return super.deploy(router, overrides || {}) as Promise<Calculator>;
  }
  getDeployTransaction(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, overrides || {});
  }
  attach(address: string): Calculator {
    return super.attach(address) as Calculator;
  }
  connect(signer: Signer): Calculator__factory {
    return super.connect(signer) as Calculator__factory;
  }
  static readonly contractName: "Calculator";
  public readonly contractName: "Calculator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalculatorInterface {
    return new utils.Interface(_abi) as CalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Calculator {
    return new Contract(address, _abi, signerOrProvider) as Calculator;
  }
}
