/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Calculator, CalculatorInterface } from "../Calculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouterCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "UnexpectedRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "encryptedSecretsUrls",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "donHostedSecretsSlotID",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "donHostedSecretsVersion",
        type: "uint64",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "bytesArgs",
        type: "bytes[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "jobId",
        type: "bytes32",
      },
    ],
    name: "sendRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "request",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "jobId",
        type: "bytes32",
      },
    ],
    name: "sendRequestCBOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "travels",
    outputs: [
      {
        internalType: "uint256",
        name: "distance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nights",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0346100d057601f6121df38819003918201601f19168301916001600160401b038311848410176100d5578084926020946040528339810103126100d057516001600160a01b038116908190036100d057608052331561008b57600080546001600160a01b031916331790556040516120f390816100ec823960805181818161010a0152610b0d0152f35b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060405260048036101561001357600080fd5b6000803560e01c9182630ca76175146100bc57505080633944ea3a146100b75780634b0795a8146100b257806352a81eeb146100ad57806379ba5097146100a85780638da5cb5b146100a35780639681096f1461009e578063b1e2174914610099578063e3e784a5146100945763f2fde38b1461008f57600080fd5b6108b3565b610870565b610852565b6107df565b6107b6565b6106fa565b610637565b6104bc565b6103e9565b3461026b57606036600319011261026b578035906001600160401b03602435818111610267576100ef9036908401610300565b90604435908111610267576101079036908401610300565b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102585780549084820361023c57508161015c9161016194935190816101ba575b5050611d8d565b611e64565b807f7873807bf6ddc50401cd3d29bbe0decee23fd4d68d273f4b5eb83cded4d2f1726040518061019081611fcd565b0390a27f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e68280a280f35b61021a6101d260206102359486010160208601610a9a565b916101db6102e1565b926ec097ce7bc90715b34b9f100000000081048452670de0b6b3a764000090818082040660208601520660408401526000526005602052604060002090565b90604060029180518455602081015160018501550151910155565b8680610155565b60405163d068bf5b60e01b815290810185815281906020010390fd5b60405163c6829f8360e01b8152fd5b8480fd5b5080fd5b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b038211176102a057604052565b61026f565b604081019081106001600160401b038211176102a057604052565b90601f801991011681019081106001600160401b038211176102a057604052565b60405190606082018281106001600160401b038211176102a057604052565b81601f82011215610356578035906001600160401b0382116102a05760405192610334601f8401601f1916602001856102c0565b8284526020838301011161035657816000926020809301838601378301015290565b600080fd5b90600182811c9216801561038b575b602083101461037557565b634e487b7160e01b600052602260045260246000fd5b91607f169161036a565b919082519283825260005b8481106103c1575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103a0565b9060206103e6928181520190610395565b90565b34610356576000806003193601126104b957604051908060035461040c8161035b565b8085529160019180831690811561048f5750600114610446575b61044285610436818703826102c0565b604051918291826103d5565b0390f35b92506003835260008051602061209e8339815191525b82841061047757505050810160200161043682610442610426565b8054602085870181019190915290930192810161045c565b8695506104429693506020925061043694915060ff191682840152151560051b8201019293610426565b80fd5b34610356576000806003193601126104b95760405190806002546104df8161035b565b8085529160019180831690811561048f57506001146105085761044285610436818703826102c0565b92506002835260008051602061207e8339815191525b82841061053957505050810160200161043682610442610426565b8054602085870181019190915290930192810161051e565b6044359060ff8216820361035657565b606435906001600160401b038216820361035657565b60c435906001600160401b038216820361035657565b6001600160401b0381116102a05760051b60200190565b9080601f83011215610356578135906105bc8261058d565b926105ca60405194856102c0565b828452602092838086019160051b8301019280841161035657848301915b8483106105f85750505050505090565b82356001600160401b03811161035657869161061984848094890101610300565b8152019201916105e8565b60e4359063ffffffff8216820361035657565b3461035657610120366003190112610356576001600160401b0360043581811161035657610669903690600401610300565b9060243581811161035657610682903690600401610300565b9161068b610551565b92610694610561565b93608435848111610356576106ad9036906004016105a4565b9460a43594851161035657610442956106cd6106ea9636906004016105a4565b916106d6610577565b936106df610624565b9561010435976109c4565b6040519081529081906020820190565b34610356576000806003193601126104b9576001546001600160a01b0390811633036107785781546001600160a01b0316600080546001600160a01b0319163317905590600180546001600160a01b03191690553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b34610356576000366003190112610356576000546040516001600160a01b039091168152602090f35b34610356576080366003190112610356576001600160401b0360043581811161035657610810903690600401610300565b906024359081168103610356576044359163ffffffff83168303610356576020926108469261083d610972565b60643592610ab5565b80600455604051908152f35b34610356576000366003190112610356576020600454604051908152f35b3461035657602036600319011261035657600435600052600560205260606040600020805490600260018201549101549060405192835260208301526040820152f35b34610356576020366003190112610356576004356001600160a01b03811690819003610356576108e1610972565b33811461092d57600180546001600160a01b031916821790556000546001600160a01b03167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b6000546001600160a01b0316330361098657565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b9193610a4b989694610a46989692610a4195610a19604051966109e688610285565b60008852600060208901526000604089015260608089015260606080890152606060a0890152606060c089015287610efa565b815115610a715750610a2c915084610f23565b8051610a61575b508051610a51575b50610d27565b610ab5565b600455565b60045490565b610a5b9082610fea565b38610a3b565b610a6b9083610fcb565b38610a33565b90506001600160401b038116610a89575b5050610a2c565b610a939185610f49565b3880610a82565b90816020910312610356575190565b6040513d6000823e3d90fd5b92906020926001600160401b039263ffffffff610af4604051978896879663230e93b160e11b885216600487015260a0602487015260a4860190610395565b60016044860152921660648401526084830152038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610b9e57600091610b70575b50807f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8600080a290565b610b91915060203d8111610b97575b610b8981836102c0565b810190610a9a565b38610b46565b503d610b7f565b610aa9565b60405190610bb0826102a5565b600c82526b31b7b232a637b1b0ba34b7b760a11b6020830152565b634e487b7160e01b600052602160045260246000fd5b60031115610beb57565b610bcb565b60405190610bfd826102a5565b60088252676c616e677561676560c01b6020830152565b60011115610beb57565b60405190610c2b826102a5565b6006825265736f7572636560d01b6020830152565b60405190610c4d826102a5565b60048252636172677360e01b6020830152565b634e487b7160e01b600052601160045260246000fd5b6000198114610c855760010190565b610c60565b8051821015610c9e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190610cc1826102a5565b600f82526e39b2b1b932ba39a637b1b0ba34b7b760891b6020830152565b60405190610cec826102a5565b60078252667365637265747360c81b6020830152565b60405190610d0f826102a5565b600982526862797465734172677360b81b6020830152565b610d2f611011565b90610d41610d3b610ba3565b836118ff565b610d5e8151610d4f81610be1565b610d5881610be1565b836110dd565b610d69610d3b610bf0565b610d836040820151610d7a81610c14565b610d5881610c14565b610d8e610d3b610c1e565b610d9c6060820151836118ff565b60a08101805151610ea1575b506080810190815151610e21575b60c0915001805151610dc9575b50515190565b91610dd5610d3b610d02565b610dde82611983565b60005b83518051821015610e0e5790610e04610dfd82610e0994610c8a565b518561184a565b610c76565b610de1565b50509150610e1b81611a0f565b38610dc3565b602081018051610e3081610be1565b610e3981610be1565b15610e8f5760c092610e72610e8a92610e59610e53610cb4565b886118ff565b51610e6381610be1565b610e6c81610be1565b866110dd565b610e83610e7d610cdf565b866118ff565b518461184a565b610db6565b60405163a80d31f760e01b8152600490fd5b92610eb3610ead610c40565b846118ff565b610ebc83611983565b60005b84518051821015610ee75790610e04610edb82610ee294610c8a565b51866118ff565b610ebf565b50509250610ef482611a0f565b38610da8565b815115610f11576000808252604082015260600152565b6040516322ce3edd60e01b8152600490fd5b815115610f37576001602082015260800152565b60405163e889636f60e01b8152600490fd5b9190610fbd608092610f8e60ff610f5e611011565b94610f87604051610f6e816102a5565b60068152651cdb1bdd125160d21b6020820152876118ff565b1684611a9c565b610fb7604051610f9d816102a5565b60078152663b32b939b4b7b760c91b6020820152846118ff565b82611a9c565b600260208401525151910152565b815115610fd85760a00152565b60405163fe936cb760e01b8152600490fd5b815115610fd85760c00152565b60405190611004826102a5565b6000602083606081520152565b60405161101d816102a5565b611025610ff7565b8082526020820160008152611038610ff7565b506101006020830152604051809252600082526101208201918210610356576000916040525290565b601f19810191908211610c8557565b9060208201809211610c8557565b91908201809211610c8557565b90611094610ff7565b50601f8116806110c3575b50806020830152604051908183526000825281016020019081106103565760405290565b60200360208111610c85578101809111610c85573861109f565b908151916110e9610ff7565b508251516001810190818111610c85576020850151811015611144575b60c2602061113a965192830101538051821161113c575b505060405191602083015260208252611135826102a5565b61184a565b565b52388061111d565b8160011b9482860460021483151715610c855760208161117661113a9861116f60c29551918461108b565b5082611792565b5096505050611106565b908160011b9180830460021490151715610c8557565b61119e610ff7565b508051516001810190818111610c855760208301518110156111d7575b605b602084519283010153805182116111d357505090565b5290565b8160011b82810460021483151715610c8557611200906111f98551918661108b565b5084611792565b506111bb565b61120e610ff7565b508051516001810190818111610c85576020830151811015611243575b605a602084519283010153805182116111d357505090565b8160011b82810460021483151715610c8557611265906111f98551918661108b565b5061122b565b611273610ff7565b508051516001810190818111610c855760208301518110156112a8575b6059602084519283010153805182116111d357505090565b8160011b82810460021483151715610c85576112ca906111f98551918661108b565b50611290565b6112d8610ff7565b508051516001810190818111610c8557602083015181101561130d575b6058602084519283010153805182116111d357505090565b8160011b82810460021483151715610c855761132f906111f98551918661108b565b506112f5565b61133d610ff7565b508051516001810190818111610c85576020830151811015611372575b607b602084519283010153805182116111d357505090565b8160011b82810460021483151715610c8557611394906111f98551918661108b565b5061135a565b6113a2610ff7565b508051516001810190818111610c855760208301518110156113d7575b607a602084519283010153805182116111d357505090565b8160011b82810460021483151715610c85576113f9906111f98551918661108b565b506113bf565b611407610ff7565b508051516001810190818111610c8557602083015181101561143c575b6079602084519283010153805182116111d357505090565b8160011b82810460021483151715610c855761145e906111f98551918661108b565b50611424565b61146c610ff7565b508051516001810190818111610c855760208301518110156114a1575b6078602084519283010153805182116111d357505090565b8160011b82810460021483151715610c85576114c3906111f98551918661108b565b50611489565b6114d1610ff7565b508051516001810190818111610c85576020830151811015611506575b601b602084519283010153805182116111d357505090565b8160011b82810460021483151715610c8557611528906111f98551918661108b565b506114ee565b611536610ff7565b508051516001810190818111610c8557602083015181101561156b575b601a602084519283010153805182116111d357505090565b8160011b82810460021483151715610c855761158d906111f98551918661108b565b50611553565b61159b610ff7565b508051516001810190818111610c855760208301518110156115d0575b6019602084519283010153805182116111d357505090565b8160011b82810460021483151715610c85576115f2906111f98551918661108b565b506115b8565b611600610ff7565b508051516001810190818111610c85576020830151811015611635575b6018602084519283010153805182116111d357505090565b8160011b82810460021483151715610c8557611657906111f98551918661108b565b5061161d565b90611666610ff7565b508151516001810191828211610c85576020840151821015611699575b602084519283010153805182116111d357505090565b8260011b83810460021484151715610c85576116c2906116bb8651918761108b565b5085611792565b50611683565b906116d58251918361108b565b506116de610ff7565b508051906116ea610ff7565b506116f88151831115611843565b82515192611706838561107e565b91602092828480940151821161177b575b5183815197820101968211611773575b505001915b8181101561174d5760001991036101000a0190811990511690825116179052565b919261176861176261176e9286518152611070565b94611070565b92611061565b61172c565b523880611727565b61178d61178783611180565b826116c8565b611717565b9061179b610ff7565b5080516117a6610ff7565b506117b48251821115611843565b825151916117c2828461107e565b602091829182870151811161182c575b865183815197820101968211611824575b505001915b8181101561180a5760001991036101000a019081199051169082511617905290565b919261176861176261181f9286518152611070565b6117e8565b5238806117e3565b61183e61183882611180565b886116c8565b6117d2565b1561035657565b81516118819291906001600160401b0381169060178211611884576118799150604060ff84519216179061165d565b505b51611792565b50565b5060ff81116118a9576118a39061189b83516112d0565b508251611c69565b5061187b565b61ffff81116118c8576118a3906118c0835161126b565b508251611c02565b63ffffffff81116118e9576118a3906118e18351611206565b508251611b99565b6118a3906118f78351611196565b508251611b2d565b81516118819291906001600160401b038116906017821161192e576118799150606060ff84519216179061165d565b5060ff8111611945576118a39061189b8351611464565b61ffff811161195c576118a3906118c083516113ff565b63ffffffff8111611975576118a3906118e1835161139a565b6118a3906118f78351611335565b80519061198e610ff7565b508151516001810190818111610c855760208401518110156119dc575b609f60208095519283010153805182116119d4575b50500180519060018201809211610c855752565b5238806119c0565b8160011b9382850460021483151715610c8557602081611a05829761116f609f9551918461108b565b50955050506119ab565b805190611a1a610ff7565b508151516001810190818111610c85576020840151811015611a69575b60ff6020809551928301015380518211611a61575b5050018051600019810191908211610c855752565b523880611a4c565b8160011b9382850460021483151715610c8557602081611a92829761116f60ff9551918461108b565b5095505050611a37565b906001600160401b03811660178111611abf575060ff611881925191169061165d565b905060ff8111611ade5781611ad761188193516115f8565b5051611c69565b61ffff8111611afc5781611af56118819351611593565b5051611c02565b63ffffffff8111611b1c5781611b15611881935161152e565b5051611b99565b81611b2a61188193516114c9565b50515b90611b36610ff7565b50815151806008019182600811610c855760208401518311611b78575b6008845192830101906001600160401b0319825116179052805182116111d357505090565b8260011b83810460021484151715610c8557611b9490856116c8565b611b53565b90611ba2610ff7565b50815151806004019182600411610c855760208401518311611be1575b60048451928301019063ffffffff19825116179052805182116111d357505090565b8260011b83810460021484151715610c8557611bfd90856116c8565b611bbf565b90611c0b610ff7565b50815151806002019182600211610c855760208401518311611c48575b60028451928301019061ffff19825116179052805182116111d357505090565b8260011b83810460021484151715610c8557611c6490856116c8565b611c28565b90611c72610ff7565b50815151806001019182600111610c855760208401518311611cae575b60018451928301019060ff19825116179052805182116111d357505090565b8260011b83810460021484151715610c8557611cca90856116c8565b611c8f565b601f8111611cdb575050565b6000906003825260008051602061209e833981519152906020601f850160051c83019410611d24575b601f0160051c01915b828110611d1957505050565b818155600101611d0d565b9092508290611d04565b601f8111611d3a575050565b6000906002825260008051602061207e833981519152906020601f850160051c83019410611d83575b601f0160051c01915b828110611d7857505050565b818155600101611d6c565b9092508290611d63565b9081516001600160401b0381116102a057611db281611dad60035461035b565b611ccf565b602080601f8311600114611dee5750819293600092611de3575b50508160011b916000199060031b1c191617600355565b015190503880611dcc565b90601f19831694611e0f600360005260008051602061209e83398151915290565b926000905b878210611e4c575050836001959610611e33575b505050811b01600355565b015160001960f88460031b161c19169055388080611e28565b80600185968294968601518155019501930190611e14565b9081516001600160401b0381116102a057611e8981611e8460025461035b565b611d2e565b602080601f8311600114611ec55750819293600092611eba575b50508160011b916000199060031b1c191617600255565b015190503880611ea3565b90601f19831694611ee6600260005260008051602061207e83398151915290565b926000905b878210611f23575050836001959610611f0a575b505050811b01600255565b015160001960f88460031b161c19169055388080611eff565b80600185968294968601518155019501930190611eeb565b60025460009291611f4b8261035b565b80825291600190818116908115611fb05750600114611f6957505050565b91929350600260005260008051602061207e833981519152916000925b848410611f9857505060209250010190565b80546020858501810191909152909301928101611f86565b915050602093945060ff929192191683830152151560051b010190565b604081526000600354611fdf8161035b565b9081604085015260019081811690816000146120585750600114612011575b50508160206103e6938303910152611f3b565b60036000908152925060008051602061209e8339815191525b8284106120425750505081016060016103e638611ffe565b805460608587010152602090930192810161202a565b90506103e6949350606092915060ff191682840152151560051b820101909138611ffe56fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba26469706673582212209a0fde68bd6d502894cc997c9d1a5b721c68d04dccbc5327015a9a604bf67b4464736f6c63430008140033";

type CalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Calculator__factory extends ContractFactory {
  constructor(...args: CalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Calculator";
  }

  deploy(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Calculator> {
    return super.deploy(router, overrides || {}) as Promise<Calculator>;
  }
  getDeployTransaction(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, overrides || {});
  }
  attach(address: string): Calculator {
    return super.attach(address) as Calculator;
  }
  connect(signer: Signer): Calculator__factory {
    return super.connect(signer) as Calculator__factory;
  }
  static readonly contractName: "Calculator";
  public readonly contractName: "Calculator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalculatorInterface {
    return new utils.Interface(_abi) as CalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Calculator {
    return new Contract(address, _abi, signerOrProvider) as Calculator;
  }
}
